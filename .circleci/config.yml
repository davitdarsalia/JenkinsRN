version: 2.1

executors:
  ios-executor:
    macos:
      xcode: '16.0.0'

  android-executor:
    docker:
      - image: reactnativecommunity/react-native-android:latest

commands:
  setup-environment:
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            - yarn-packages-
      - run:
          name: Install Yarn Dependencies
          command: yarn install --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - restore_cache:
          name: Restore Gem Cache
          keys:
            - gem-cache-{{ checksum "Gemfile.lock" }}
            - gem-cache-
      - run:
          name: 'Install Bundler'
          command: gem install bundler -v 2.5.18
      - run:
          name: Install Gems
          command: bundler install --path vendor/bundle
      - save_cache:
          name: Save Gem Cache
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

jobs:
  react-native-android-setup:
    executor: android-executor
    steps:
      - setup-environment
      - run:
          name: Run Unit Tests
          command: |
            mkdir -p test-reports
            yarn test --outputFile=test-reports/test-results.json --json
      - store_artifacts:
          name: Save Test Report
          path: test-reports/test-results.json
      - restore_cache:
          name: Restore Gradle Cache
          keys:
            - gradle-cache-{{ checksum "android/build.gradle" }}
            - gradle-cache-
      - run:
          name: Resolve Gradle Dependencies
          command: cd android && ./gradlew dependencies
      - save_cache:
          name: Save Gradle Cache
          key: gradle-cache-{{ checksum "android/build.gradle" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
      - run:
          name: Assemble Release APK
          command: |
            echo "$BUILD_KEYSTORE_FILE_64" | base64 --decode > android/app/release.keystore
            bundle exec fastlane android releaseAndroid
      - run:
          name: Assemble Debug APK
          command: |
            echo "$BUILD_KEYSTORE_FILE_64" | base64 --decode > android/app/debug.keystore
            bundle exec fastlane android betaAndroid
      - store_artifacts:
          name: Save Debug APK
          path: android/app/build/outputs/apk/release/app-release.apk
          destination: release-apk

  react-native-ios-setup:
    executor: ios-executor
    steps:
      - setup-environment
      - restore_cache:
          name: Restore Pods Cache
          keys:
            - pod-packages-{{ checksum "ios/Podfile.lock" }}
            - pod-packages-

      - run:
          name: Install CocoaPods Dependencies
          command: |
            cd ios
            bundle exec pod install
      - save_cache:
          name: Save Pods as Cache
          key: pod-packages-{{ checksum "ios/Podfile.lock" }}
          paths: ios/Pods

workflows:
  android_ios:
    jobs:
      - react-native-ios-setup
      - react-native-android-setup:
          requires:
            - react-native-ios-setup
